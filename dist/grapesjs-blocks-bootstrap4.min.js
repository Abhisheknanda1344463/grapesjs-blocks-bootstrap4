(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("grapesjs"));
	else if(typeof define === 'function' && define.amd)
		define(["grapesjs"], factory);
	else if(typeof exports === 'object')
		exports["grapesjs-blocks-bootstrap4"] = factory(require("grapesjs"));
	else
		root["grapesjs-blocks-bootstrap4"] = factory(root["grapesjs"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _grapesjs = __webpack_require__(1);

var _grapesjs2 = _interopRequireDefault(_grapesjs);

var _components = __webpack_require__(2);

var _components2 = _interopRequireDefault(_components);

var _blocks = __webpack_require__(3);

var _blocks2 = _interopRequireDefault(_blocks);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _grapesjs2.default.plugins.add('grapesjs-blocks-bootstrap4', function (editor) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};


  window.editor = editor;

  var opts_blocks = opts.blocks || {};
  var opts_labels = opts.labels || {};
  delete opts['blocks'];
  delete opts['labels'];

  var options = _extends({
    blocks: Object.assign({
      text: true,
      header: true
    }, opts_blocks),
    labels: Object.assign({
      text: 'Text',
      header: 'Header'
    }, opts_labels)
  }, opts);

  // Add components
  (0, _components2.default)(editor, options);

  // Add blocks
  (0, _blocks2.default)(editor, options);

  // TODO Remove
  //editor.on('load', () => editor.addComponents(`<div style="margin:0 100px; padding:25px;">Content loaded from the plugin</div>`))
});

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (editor) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var c = config;
  var domc = editor.DomComponents;
  var blocks = c.blocks;

  var defaultType = domc.getType('default');
  var defaultModel = defaultType.model;
  var defaultView = defaultType.view;

  var textType = domc.getType('text');
  var textModel = textType.model;
  var textView = textType.view;

  var linkType = domc.getType('link');
  var linkModel = linkType.model;
  var linkView = linkType.view;

  var imageType = domc.getType('image');
  var imageModel = imageType.model;
  var imageView = imageType.view;

  // Rebuild the text component and add some "utility" traits to it
  if (blocks.text) {
    domc.addType('text', {
      model: textModel.extend({
        defaults: Object.assign({}, textModel.prototype.defaults, {
          'custom-name': 'Text',
          tagName: 'div',
          attributes: {
            'data-bs-text': true
          },
          traits: [{
            type: 'select',
            options: [{ value: '0', name: 'None' }, { value: '1', name: 'One (largest)' }, { value: '2', name: 'Two ' }, { value: '3', name: 'Three ' }, { value: '4', name: 'Four (smallest)' }],
            label: 'Display Heading',
            name: 'display-heading-size',
            changeProp: 1
          }].concat(textModel.prototype.defaults.traits)
        }),
        init: function init() {
          this.listenTo(this, 'change:display-heading-size', this.changeDisplayHeadingClass);
        },
        changeDisplayHeadingClass: function changeDisplayHeadingClass() {
          var size = this.get('display-heading-size');
          this.removeClass(['display-1', 'display-2', 'display-3', 'display-4']);
          if (['1', '2', '3', '4'].includes(size)) {
            console.log('adding display class');
            this.addClass('display-' + size);
          }
          this.em.trigger('change:selectedComponent');
        }
      }, {
        isComponent: function isComponent(el) {
          if (el && el.dataset && el.dataset.bsText) {
            return { type: 'bs_text' };
          }
        }
      }),
      view: textView
    });
    textType = domc.getType('text');
    textModel = textType.model;
    textView = textType.view;
  }

  // Header

  if (blocks.header) {
    domc.addType('header', {
      model: textModel.extend({
        defaults: Object.assign({}, textModel.prototype.defaults, {
          'custom-name': 'Header',
          tagName: 'h1',
          traits: [{
            type: 'select',
            options: [{ value: 'h1', name: 'One (largest)' }, { value: 'h2', name: 'Two ' }, { value: 'h3', name: 'Three ' }, { value: 'h4', name: 'Four ' }, { value: 'h5', name: 'Five ' }, { value: 'h6', name: 'Six (smallest)' }],
            label: 'Size',
            name: 'tagName',
            changeProp: 1
          }].concat(textModel.prototype.defaults.traits)
        })

      }, {
        isComponent: function isComponent(el) {
          if (el && ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'].includes(el.tagName)) {
            return { type: 'header' };
          }
        }
      }),
      view: textView
    });
  }
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (editor) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var c = config;
  var bm = editor.BlockManager;
  var blocks = c.blocks;

  if (blocks.text) {
    bm.add('text', {
      label: 'Text',
      category: 'Typography',
      attributes: { class: 'fa fa-font' },
      content: {
        type: 'text',
        content: 'Insert your text here'
      }
    });
  }

  if (blocks.header) {
    bm.add('header', {
      label: c.labels.header,
      category: 'Typography',
      attributes: { class: 'fa fa-header' },
      content: {
        type: 'header',
        content: 'Bootstrap heading'
      }
    });
  }
};

/***/ })
/******/ ]);
});